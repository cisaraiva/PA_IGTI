{
	"name": "LZ_HZ_2019_IdadeSuspeito",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "fb846516-6a52-4694-9fc3-2dc00930f2a8"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.types import StructField, StructType, IntegerType, StringType\r\n",
					"from pyspark.sql import functions as f"
				],
				"execution_count": 36
			},
			{
				"cell_type": "code",
				"source": [
					"# Definir schema do arquivo\r\n",
					"schema = StructType([ \r\n",
					"    StructField(\"None\", StringType(), True), \r\n",
					"    StructField(\"FaixaEtariaSuspeito\", StringType(), True), \r\n",
					"    StructField(\"Janeiro\", StringType(), True), \r\n",
					"    StructField(\"Fevereiro\", StringType(), True), \r\n",
					"    StructField(\"Mar√ßo\", StringType(), True), \r\n",
					"    StructField(\"Abril\", StringType(), True), \r\n",
					"    StructField(\"Maio\", StringType(), True), \r\n",
					"    StructField(\"Junho\", StringType(), True), \r\n",
					"    StructField(\"Julho\", StringType(), True), \r\n",
					"    StructField(\"Agosto\", StringType(), True), \r\n",
					"    StructField(\"Setembro\", StringType(), True), \r\n",
					"    StructField(\"Outubro\", StringType(), True), \r\n",
					"    StructField(\"Novembro\", StringType(), True), \r\n",
					"    StructField(\"Dezembro\", StringType(), True), \r\n",
					"    StructField(\"Total\", StringType(), True)\r\n",
					"])"
				],
				"execution_count": 37
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Ler arquivo de origem da landing zone\r\n",
					"df = spark.read.format(\"csv\") \\\r\n",
					"            .schema(schema) \\\r\n",
					"            .options(quote='\"') \\\r\n",
					"            .load('/landing_zone/2019/Balanco-2019-Ligue180-Idade Suspeito.csv')"
				],
				"execution_count": 38
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Remover colunas e linhas sem valor para o data lake\r\n",
					"df = df.where((df[1].isNotNull()) \\\r\n",
					"                & (df[1] != 'Total') \\\r\n",
					"                & (df[-1] != 'Total 2019') \\\r\n",
					"                & (df[-1].isNotNull()))\r\n",
					"df = df.drop('None')\r\n",
					"df = df.drop('Total')"
				],
				"execution_count": 39
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Remover \",\" de todos os campos e substitui null por 0\r\n",
					"names = df.schema.names\r\n",
					"for name in names:\r\n",
					"    if name == 'FaixaEtariaSuspeito':\r\n",
					"        continue\r\n",
					"    df = df.withColumn(name,f.regexp_replace(name,',',''))\r\n",
					"    df = df.withColumn(name, df[name].cast(IntegerType()))\r\n",
					"\r\n",
					"df = df.fillna(0)"
				],
				"execution_count": 40
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Escrever dados limpos em formato parque no azure storage\r\n",
					"df.write.format('parquet').mode('overwrite').save('/history_zone/2019/IdadeSuspeito/')"
				],
				"execution_count": 41
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df = spark.read.parquet('/history_zone/2019/IdadeSuspeito/')\r\n",
					"df.toPandas()"
				],
				"execution_count": 42
			}
		]
	}
}