{
	"name": "PreLandingZone_PrimeiroSemestre",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "tcccibele2",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "93d19e72-13fb-4bb9-b6a6-f540b054d3d7"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/3768861a-a3bf-47a5-a888-a7be0541a195/resourceGroups/tcc_cibele2/providers/Microsoft.Synapse/workspaces/tcccibele2/bigDataPools/tcccibele2",
				"name": "tcccibele2",
				"type": "Spark",
				"endpoint": "https://tcccibele2.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/tcccibele2",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import pandas\r\n",
					"import pyspark.sql.functions as F"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://tcccibele2@tcccibele2.dfs.core.windows.net/landing_zone/2020/primeiro_semestre_2020.csv'\r\n",
					"    ,format='csv'\r\n",
					"    ,encoding='ISO-8859-1'\r\n",
					")\r\n",
					"display(df.limit(10))"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.functions import *\r\n",
					"\r\n",
					"df = df.withColumn('_c0', regexp_replace('_c0', '\"', ''))\r\n",
					"df = df.withColumn('_c0', regexp_replace('_c0', '''''', ''))\r\n",
					"df = df.withColumn('_c0', regexp_replace('_c0', 'AGRESSOR CÔNJUGE;CONVIVENTE;ASCENDENTE;DESCENDENTE OU PARENTE', \"AGRESSOR CÔNJUGE,CONVIVENTE,ASCENDENTE,DESCENDENTE OU PARENTE\"))\r\n",
					"df = df.withColumn('_c0', regexp_replace('_c0', 'BAR;LANCHONETE;RESTAURANTE', \"BAR,LANCHONETE,RESTAURANTE\"))\r\n",
					"df = df.withColumn('_c0', regexp_replace('_c0', 'MOTIVO VIL;TORPE;INSIDIOSO;CRUEL;À TRAIÇÃO;OU POR DINHEIRO', \"MOTIVO VIL,TORPE,INSIDIOSO,CRUEL,À TRAIÇÃO,OU POR DINHEIRO\"))\r\n",
					"df = df.withColumn('_c0', regexp_replace('_c0', 'VÍTIMA IDOSA;CRIANÇA;DEFICIENTE OU MINORIA ÉTNICA OU SOCIAL', \"VÍTIMA IDOSA,CRIANÇA,DEFICIENTE OU MINORIA ÉTNICA OU SOCIAL\"))\r\n",
					"df = df.withColumn('_c0', regexp_replace('_c0', 'AGRESSOR POLICIAL/MILITAR;POLICIAL CIVIL', \"AGRESSOR POLICIAL/MILITAR,POLICIAL CIVIL\"))\r\n",
					"df = df.withColumn('_c0', regexp_replace('_c0', 'AGRESSOR POLICIAL/MILITAR;POLICIAL MILITAR', \"AGRESSOR POLICIAL/MILITAR,POLICIAL MILITAR\"))\r\n",
					"df = df.withColumn('_c0', regexp_replace('_c0', 'VÍTIMA IDOSA;CRIANÇA;DEFICIENTE OU MINORIA ÉTNICA OU SOCIAL', \"VÍTIMA IDOSA,CRIANÇA,DEFICIENTE OU MINORIA ÉTNICA OU SOCIAL\"))\r\n",
					""
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.write.mode(\"overwrite\").csv(\"/landing_zone/2020/primeiro_semestre_2020_1.csv\", encoding='ISO-8859-1')"
				],
				"execution_count": 9
			}
		]
	}
}